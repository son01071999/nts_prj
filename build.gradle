buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.flywaydb:flyway-mysql:10.11.0"
    }
}
plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java-library'
    id 'com.netflix.dgs.codegen' version '6.0.3'
    id "com.diffplug.spotless" version "6.11.0"
    id "org.flywaydb.flyway" version "10.11.0"
}

group = 'com.code'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-graphql'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.mindrot:jbcrypt:0.4'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.5'
    implementation 'org.springframework.boot:spring-boot-starter-security:3.3.0'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'org.flywaydb:flyway-gradle-plugin:10.11.0'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.graphql:spring-graphql-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

generateJava {
    schemaPaths = ["${projectDir}/src/main/resources/graphql-client"]
    packageName = 'com.code.nts_prj.codegen'
    generateClient = true
}

allprojects{
    apply plugin: "com.diffplug.spotless"

    sourceCompatibility = JavaVersion.VERSION_17
    compileJava.options.encoding = 'UTF-8'

    spotless {
        java {
            importOrder()
            removeUnusedImports()
            trimTrailingWhitespace()
            googleJavaFormat('1.12.0')
            indentWithTabs(2)
            endWithNewline()
            target 'src/*/java/**/*.java'
        }

        format 'misc', {
            target '**/*.gradle', '**/*.md', '**/*.gitignore'
            targetExclude '.release/*.*'
            indentWithSpaces()
            trimTrailingWhitespace()
            endWithNewline()
        }
    }
}
flyway {
    url = "jdbc:mysql://localhost:3305/mydb"
    user = 'son.nguyen12'
    password = '123456'
    cleanDisabled = false
    locations = ['classpath:db.migration', 'filesystem:src/main/resources/db/migration']
}
